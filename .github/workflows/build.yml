name: Build

on: 
  push:
    paths:
      - meson.build
      - src/**
      - include/**
      - examples/**
      - misc/ci_test_file.cpp
      - .github/workflows/build.yml

jobs:
  linux-build:
    runs-on: ubuntu-latest

    env:
        PKG_CONFIG_PATH: ${{github.workspace}}/install/lib/x86_64-linux-gnu/pkgconfig
        CC: gcc-13
        CXX: g++-13

    steps:
      - uses: actions/checkout@v4

      - name: Install libraries
        run: |
          sudo apt install -y ninja-build libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev libxkbcommon-dev
          sudo pip3 install meson
        
      - name: Configure
        run: |
          mkdir ${{github.workspace}}/user_test
          meson wrap update-db 
          meson setup build --default-library=both --prefix=${{github.workspace}}/install --buildtype=release -Dmygl_build_examples=true
        
      - name: Build and Install the library
        working-directory: ${{github.workspace}}/build
        run: |
          meson compile
          meson install
        
      - name: Check compilation against static libs
        working-directory: ${{github.workspace}}/user_test
        run: |
          g++ -std=c++20 -c ${{github.workspace}}/misc/ci_test_file.cpp $(pkg-config --cflags mygl) -DMYGL_STATIC_DEFINE
          g++ ci_test_file.o -o test ${{github.workspace}}/install/lib/x86_64-linux-gnu/libmygl.a -L${{github.workspace}}/install/lib/x86_64-linux-gnu/ -lglfw3 -lfreetype -ldl -lpthread

      - name: Check compilation against shared libs
        working-directory: ${{github.workspace}}/user_test
        run: |
          g++ -std=c++20 -c ${{github.workspace}}/misc/ci_test_file.cpp $(pkg-config --cflags mygl)
          g++ ci_test_file.o -o test -L${{github.workspace}}/install/lib/x86_64-linux-gnu/ -lmygl -lglfw3 -lfreetype -ldl -lpthread

  windows-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies
        run: |
          choco -y install ninja
          pip3 install meson

      - name: Configure
        run: |
          mkdir ${{github.workspace}}/user_test
          meson wrap update-db 
          meson setup build --default-library=both --prefix=${{github.workspace}}/install --buildtype=release -Dmygl_build_examples=true
        
      - name: Build and Install the library
        working-directory: ${{github.workspace}}/build
        run: |
          meson compile
          meson install
      
      - name: Check compilation against static libs
        working-directory: ${{github.workspace}}/user_test
        run: |
          cp ${{github.workspace}}/install/bin/*.dll .
          cl ${{github.workspace}}/misc/ci_test_file.cpp glfw3.lib freetype.lib opengl32.lib gdi32.lib user32.lib shell32.lib winmm.lib /MD /Fe:test /std:c++latest /I ${{github.workspace}}/install/include /I ${{github.workspace}}/install/include/MyGL /I ${{github.workspace}}/install/include/freetype2 /D MYGL_STATIC /link /LIBPATH:${{github.workspace}}/install/lib libmygl.a
      
      - name: Check compilation against shared libs
        working-directory: ${{github.workspace}}/user_test
        run: cl ${{github.workspace}}/misc/ci_test_file.cpp mygl.lib glfw3.lib freetype.lib opengl32.lib gdi32.lib user32.lib shell32.lib winmm.lib /MD /Fe:test /std:c++latest /I ${{github.workspace}}/install/include /I ${{github.workspace}}/install/include/MyGL /I ${{github.workspace}}/install/include/freetype2 /link /LIBPATH:${{github.workspace}}/install/lib
